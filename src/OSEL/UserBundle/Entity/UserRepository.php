<?php

namespace OSEL\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;


/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
	public function getUsers($page, $nbPerPage, $enabled, $criteria, $desc)
    {
		$qb = $this->createQueryBuilder('a')
                    ->leftJoin('a.instruments', 'c')
                    ->addSelect('c');

		if($enabled)
		{
			if($desc)
			{
				$qb->where('a.enabled = :enabled')
					->setParameter('enabled', true)
				->orderBy('a.'.$criteria, 'DESC')
			;
			}
			else
			{
				$qb->where('a.enabled = :enabled')
					->setParameter('enabled', true)
				->orderBy('a.'.$criteria)
			;
			}
			
		}
		else
		{
			if($desc)
			{
			    if($criteria == 'instruments')
                {
                    $qb->orderBy('c.instrument', 'DESC');
                }
                else{
                    $qb->orderBy('a.'.$criteria, 'DESC');
                }
			}
			else
			{
                if($criteria == 'instruments')
                {
                    $qb->orderBy('c.instrument');
                }
                else{
                    $qb->orderBy('a.'.$criteria);
                }
			}
		}

        $qb->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage)
        ;

        return new Paginator($qb, true);

	}

	public function getExportQuery()
    {
        $queryBuilder = $this->createQueryBuilder('a');
	    $query = $queryBuilder->getQuery();
	    //$results = $query->getResult();
	    return $query;
    }
}
